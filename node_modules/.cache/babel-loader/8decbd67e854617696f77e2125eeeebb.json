{"ast":null,"code":"var _jsxFileName = \"/home/amadu/detail/macs/src/Table.js\";\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 50\n}, {\n  id: 'code',\n  label: 'Purpose',\n  minWidth: 50\n}, {\n  id: 'date',\n  label: 'Date',\n  minWidth: 50\n}, {\n  id: 'population',\n  label: 'Amount',\n  minWidth: 50,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}];\n\nfunction createData(name, code, date, population) {\n  return {\n    name,\n    code,\n    date,\n    population\n  };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable({\n  dd\n}) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  let rows = [];\n\n  if (dd.length) {\n    dd.forEach(e => {\n      const v = e[2].split(\"T\");\n      const n = e[0].substr(0, 1).toUpperCase();\n      const s = e[0].substr(1, e[0].length).toLowerCase();\n      const ff = n + s;\n      rows.push(createData(ff, e[1], v[0], e[3]));\n    });\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, columns.map((column, k) => /*#__PURE__*/React.createElement(TableCell, {\n    key: k,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, k) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: `key${k}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, columns.map((column, k) => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: `k${k}`,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/amadu/detail/macs/src/Table.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","createData","name","code","date","population","useStyles","root","width","container","maxHeight","StickyHeadTable","dd","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","rows","length","forEach","e","v","split","n","substr","toUpperCase","s","toLowerCase","ff","push","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","k","slice","row"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n\n\n\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 50 },\n  { id: 'code', label: 'Purpose', minWidth: 50 },\n  { id: 'date', label: 'Date', minWidth: 50 },\n  {\n    id: 'population',\n    label: 'Amount',\n    minWidth: 50,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n   \n];\n\nfunction createData(name, code,date, population) {\n  \n  return { name, code,date, population };\n}\n\n\n\n\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function StickyHeadTable({dd}) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n   let rows = [\n   \n     \n  ];\n  \n  \nif(dd.length){\n    dd.forEach(e => {\n       const v = e[2].split(\"T\")\n       const n  =e[0].substr(0,1).toUpperCase()\n       const s  =e[0].substr(1,e[0].length).toLowerCase()\n               const ff = n+s\n      rows.push( createData(ff, e[1],v[0],e[3]))\n  });\n}\n  \n \n\n  \n  \n    \n  \n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column,k) => (\n                <TableCell\n                  key={k}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,k) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={`key${k}`}>\n                  {columns.map((column,k) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={`k${k}`} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}